"use strict";

var _express = _interopRequireDefault(require("express"));
var _cors = _interopRequireDefault(require("cors"));
var _dotenv = _interopRequireDefault(require("dotenv"));
var _index = require("./routes/index.js");
var _database = _interopRequireDefault(require("./config/database.js"));
var _rateLimit = require("./middleware/rateLimit.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
_dotenv["default"].config();
var app = (0, _express["default"])();
var PORT = process.env.PORT || 3000;

// Middleware
app.use((0, _cors["default"])({
  origin: process.env.FRONTEND_URL || "http://localhost:3000",
  allowedHeaders: ["Content-Type", "Authorization"],
  methods: ["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"],
  credentials: true
}));
app.use(_express["default"].json());
app.use(_express["default"].urlencoded({
  extended: true
}));

// Routes
app.use("/api", _index.router);

// Connect to Database
(0, _database["default"])();

// Error handling middleware
app.use(function (err, req, res, next) {
  console.error(err.stack);
  res.status(500).json({
    message: "Something went wrong!"
  });
});

// Apply rate limiting to all routes
app.use(_rateLimit.limiter);
app.listen(PORT, function () {
  console.log("Server is running on port ".concat(PORT));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2NvcnMiLCJfZG90ZW52IiwiX2luZGV4IiwiX2RhdGFiYXNlIiwiX3JhdGVMaW1pdCIsImUiLCJfX2VzTW9kdWxlIiwiZG90ZW52IiwiY29uZmlnIiwiYXBwIiwiZXhwcmVzcyIsIlBPUlQiLCJwcm9jZXNzIiwiZW52IiwidXNlIiwiY29ycyIsIm9yaWdpbiIsIkZST05URU5EX1VSTCIsImFsbG93ZWRIZWFkZXJzIiwibWV0aG9kcyIsImNyZWRlbnRpYWxzIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsIm1haW5Sb3V0ZXIiLCJjb25uZWN0RGF0YWJhc2UiLCJlcnIiLCJyZXEiLCJyZXMiLCJuZXh0IiwiY29uc29sZSIsImVycm9yIiwic3RhY2siLCJzdGF0dXMiLCJtZXNzYWdlIiwibGltaXRlciIsImxpc3RlbiIsImxvZyIsImNvbmNhdCJdLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xyXG5pbXBvcnQgY29ycyBmcm9tIFwiY29yc1wiO1xyXG5pbXBvcnQgZG90ZW52IGZyb20gXCJkb3RlbnZcIjtcclxuaW1wb3J0IHsgcm91dGVyIGFzIG1haW5Sb3V0ZXIgfSBmcm9tIFwiLi9yb3V0ZXMvaW5kZXguanNcIjtcclxuaW1wb3J0IGNvbm5lY3REYXRhYmFzZSBmcm9tIFwiLi9jb25maWcvZGF0YWJhc2UuanNcIjtcclxuaW1wb3J0IHsgbGltaXRlciB9IGZyb20gXCIuL21pZGRsZXdhcmUvcmF0ZUxpbWl0LmpzXCI7XHJcblxyXG5kb3RlbnYuY29uZmlnKCk7XHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcbmNvbnN0IFBPUlQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDA7XHJcblxyXG4vLyBNaWRkbGV3YXJlXHJcbmFwcC51c2UoXHJcbiAgY29ycyh7XHJcbiAgICBvcmlnaW46IHByb2Nlc3MuZW52LkZST05URU5EX1VSTCB8fCBcImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMFwiLFxyXG4gICAgYWxsb3dlZEhlYWRlcnM6IFtcIkNvbnRlbnQtVHlwZVwiLCBcIkF1dGhvcml6YXRpb25cIl0sXHJcbiAgICBtZXRob2RzOiBbXCJHRVRcIiwgXCJQT1NUXCIsIFwiUFVUXCIsIFwiREVMRVRFXCIsIFwiUEFUQ0hcIiwgXCJPUFRJT05TXCJdLFxyXG4gICAgY3JlZGVudGlhbHM6IHRydWUsXHJcbiAgfSlcclxuKTtcclxuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XHJcbmFwcC51c2UoZXhwcmVzcy51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xyXG5cclxuLy8gUm91dGVzXHJcbmFwcC51c2UoXCIvYXBpXCIsIG1haW5Sb3V0ZXIpO1xyXG5cclxuLy8gQ29ubmVjdCB0byBEYXRhYmFzZVxyXG5jb25uZWN0RGF0YWJhc2UoKTtcclxuXHJcbi8vIEVycm9yIGhhbmRsaW5nIG1pZGRsZXdhcmVcclxuYXBwLnVzZSgoZXJyLCByZXEsIHJlcywgbmV4dCkgPT4ge1xyXG4gIGNvbnNvbGUuZXJyb3IoZXJyLnN0YWNrKTtcclxuICByZXMuc3RhdHVzKDUwMCkuanNvbih7IG1lc3NhZ2U6IFwiU29tZXRoaW5nIHdlbnQgd3JvbmchXCIgfSk7XHJcbn0pO1xyXG5cclxuLy8gQXBwbHkgcmF0ZSBsaW1pdGluZyB0byBhbGwgcm91dGVzXHJcbmFwcC51c2UobGltaXRlcik7XHJcblxyXG5hcHAubGlzdGVuKFBPUlQsICgpID0+IHtcclxuICBjb25zb2xlLmxvZyhgU2VydmVyIGlzIHJ1bm5pbmcgb24gcG9ydCAke1BPUlR9YCk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBQUEsUUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsS0FBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUUsT0FBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUcsTUFBQSxHQUFBSCxPQUFBO0FBQ0EsSUFBQUksU0FBQSxHQUFBTCxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUssVUFBQSxHQUFBTCxPQUFBO0FBQW9ELFNBQUFELHVCQUFBTyxDQUFBLFdBQUFBLENBQUEsSUFBQUEsQ0FBQSxDQUFBQyxVQUFBLEdBQUFELENBQUEsZ0JBQUFBLENBQUE7QUFFcERFLGtCQUFNLENBQUNDLE1BQU0sQ0FBQyxDQUFDO0FBRWYsSUFBTUMsR0FBRyxHQUFHLElBQUFDLG1CQUFPLEVBQUMsQ0FBQztBQUNyQixJQUFNQyxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRixJQUFJLElBQUksSUFBSTs7QUFFckM7QUFDQUYsR0FBRyxDQUFDSyxHQUFHLENBQ0wsSUFBQUMsZ0JBQUksRUFBQztFQUNIQyxNQUFNLEVBQUVKLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSSxZQUFZLElBQUksdUJBQXVCO0VBQzNEQyxjQUFjLEVBQUUsQ0FBQyxjQUFjLEVBQUUsZUFBZSxDQUFDO0VBQ2pEQyxPQUFPLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLFNBQVMsQ0FBQztFQUM3REMsV0FBVyxFQUFFO0FBQ2YsQ0FBQyxDQUNILENBQUM7QUFDRFgsR0FBRyxDQUFDSyxHQUFHLENBQUNKLG1CQUFPLENBQUNXLElBQUksQ0FBQyxDQUFDLENBQUM7QUFDdkJaLEdBQUcsQ0FBQ0ssR0FBRyxDQUFDSixtQkFBTyxDQUFDWSxVQUFVLENBQUM7RUFBRUMsUUFBUSxFQUFFO0FBQUssQ0FBQyxDQUFDLENBQUM7O0FBRS9DO0FBQ0FkLEdBQUcsQ0FBQ0ssR0FBRyxDQUFDLE1BQU0sRUFBRVUsYUFBVSxDQUFDOztBQUUzQjtBQUNBLElBQUFDLG9CQUFlLEVBQUMsQ0FBQzs7QUFFakI7QUFDQWhCLEdBQUcsQ0FBQ0ssR0FBRyxDQUFDLFVBQUNZLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLElBQUksRUFBSztFQUMvQkMsT0FBTyxDQUFDQyxLQUFLLENBQUNMLEdBQUcsQ0FBQ00sS0FBSyxDQUFDO0VBQ3hCSixHQUFHLENBQUNLLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ1osSUFBSSxDQUFDO0lBQUVhLE9BQU8sRUFBRTtFQUF3QixDQUFDLENBQUM7QUFDNUQsQ0FBQyxDQUFDOztBQUVGO0FBQ0F6QixHQUFHLENBQUNLLEdBQUcsQ0FBQ3FCLGtCQUFPLENBQUM7QUFFaEIxQixHQUFHLENBQUMyQixNQUFNLENBQUN6QixJQUFJLEVBQUUsWUFBTTtFQUNyQm1CLE9BQU8sQ0FBQ08sR0FBRyw4QkFBQUMsTUFBQSxDQUE4QjNCLElBQUksQ0FBRSxDQUFDO0FBQ2xELENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==